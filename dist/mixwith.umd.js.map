{"version":3,"file":"mixwith.umd.js","sources":["../src/mixwith.ts"],"sourcesContent":["'use strict'\n\nexport type Function<A = any> = (...args: any[]) => A\nexport type Constructor<A = any> = new (...args: any[]) => A\nexport type Mixin<T extends Function<any>> = InstanceType<ReturnType<T>>\nexport type MixinParameters<T extends (...args: any) => any> = T extends (superclass: any, ...args: infer P) => any ? P : never;\n\nexport const _cachedApplicationRef = Symbol('_cachedApplicationRef')\nexport const _mixinRef = Symbol('_mixinRef')\nexport const _originalMixin = Symbol('_originalMixin')\n\n/**\n * Sets the prototype of mixin to wrapper so that properties set on mixin are\n * inherited by the wrapper.\n *\n * This is needed in order to implement @@hasInstance as a decorator function.\n */\nexport const wrap = <T> (mixin: T | any, wrapper: Function<T>): any => {\n  Object.setPrototypeOf(wrapper, mixin)\n  if (!mixin[_originalMixin]) {\n    Object.defineProperty(mixin, _originalMixin, {\n      value: mixin,\n    })\n  }\n  return wrapper\n}\n\n/**\n * Decorates mixin so that it caches its applications. When applied multiple\n * times to the same superclass, mixin will only create one subclass and\n * memoize it.\n */\nexport const Cached = <T> (mixin: T | any): T => wrap(mixin,\n  <T extends Constructor> (superclass: T | any, ...args: any[]) => {\n    // Get or create a symbol used to look up a previous application of mixin\n    // to the class. This symbol is unique per mixin definition, so a class will have N\n    // applicationRefs if it has had N mixins applied to it. A mixin will have\n    // exactly one _cachedApplicationRef used to store its applications.\n    let applicationRef = mixin[_cachedApplicationRef]\n    if (!applicationRef) {\n      applicationRef = mixin[_cachedApplicationRef] = Symbol(mixin.name)\n    }\n    // Look up an existing application of `mixin` to `c`, return it if found.\n    if (({}).hasOwnProperty.call(superclass, applicationRef)) {\n      return superclass[applicationRef]\n    }\n    // Apply the mixin\n    const application: Constructor = mixin(superclass, ...args)\n    // Cache the mixin application on the superclass\n    superclass[applicationRef] = application\n    return application\n  })\n\n/**\n * Returns `true` if `o` has an application of `mixin` on its prototype chain.\n *\n * @example\n * hasMixin(superclass.prototype, mixin)\n */\nexport const hasMixin = <T> (o: any, mixin: T | any): boolean => {\n  while (o != null) {\n    if (o[_mixinRef] === mixin[_originalMixin]) {\n      return true\n    }\n    o = Object.getPrototypeOf(o)\n  }\n  return false\n}\n\n/**\n * Adds @@hasInstance (ES2015 instanceof support) to mixin.\n * Note: @@hasInstance is not supported in any browsers yet.\n */\nexport const HasInstance = <T> (mixin: T | any): T => {\n  if (Symbol.hasInstance && !({}).hasOwnProperty.call(mixin, Symbol.hasInstance)) {\n    Object.defineProperty(mixin, Symbol.hasInstance, {\n      value: function (o: any) {\n        return hasMixin(o, mixin)\n      },\n    })\n  }\n  return mixin\n}\n\n/**\n * Decorates `mixin` so that it only applies if it's not already on the prototype chain.\n */\nexport const DeDupe = <T> (mixin: T | any): T => wrap(mixin,\n  <S extends Constructor> (superclass: S, ...args: any[]) => hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass, ...args)\n)\n\n/**\n * A basic mixin decorator that sets up a reference from mixin applications\n * to the mixin definition for use by other mixin decorators.\n */\nexport const BareMixin = <T> (mixin: T | any): T => wrap(mixin,\n  <T> (superclass: T, ...args: any[]) => {\n    // Apply the mixin\n    const application = mixin(superclass, ...args)\n\n    // Attach a reference from mixin application to wrapped mixin for RTTI\n    // mixin[@@hasInstance] should use this.\n    application.prototype[_mixinRef] = mixin[_originalMixin]\n    return application\n  }\n)\n\n/**\n *\n * @param mixin\n */\nexport const Mixin = <T> (mixin: T): T => DeDupe(Cached(HasInstance(BareMixin(mixin))))\n\nclass MixinBuilder<TSuperClass extends Constructor> {\n  private superclass: TSuperClass\n\n  constructor (superclass: TSuperClass) {\n    this.superclass = superclass\n  }\n\n  with (): TSuperClass;\n  with<A extends Function> (m1: A): TSuperClass & ReturnType<A>;\n  with<A extends Function, B extends Function> (m1: A, m2: B): TSuperClass & ReturnType<A> & ReturnType<B>;\n  with<A extends Function, B extends Function, C extends Function> (m1: A, m2: B, m3: C): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function> (m1: A, m2: B, m3: C, m4: D): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: F): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function, T extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S, m20: T): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S> & ReturnType<T>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function, T extends Function, U extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S, m20: T, m21: U): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S> & ReturnType<T> & ReturnType<U>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function, T extends Function, U extends Function, V extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S, m20: T, m21: U, m22: V): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S> & ReturnType<T> & ReturnType<U> & ReturnType<V>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function, T extends Function, U extends Function, V extends Function, W extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S, m20: T, m21: U, m22: V, m23: W): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S> & ReturnType<T> & ReturnType<U> & ReturnType<V> & ReturnType<W>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function, T extends Function, U extends Function, V extends Function, W extends Function, X extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S, m20: T, m21: U, m22: V, m23: W, m24: X): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S> & ReturnType<T> & ReturnType<U> & ReturnType<V> & ReturnType<W> & ReturnType<X>;\n  with<A extends Function, B extends Function, C extends Function, D extends Function, E extends Function, F extends Function, G extends Function, H extends Function, I extends Function, J extends Function, K extends Function, L extends Function, M extends Function, N extends Function, O extends Function, P extends Function, Q extends Function, R extends Function, S extends Function, T extends Function, U extends Function, V extends Function, W extends Function, X extends Function, Y extends Function> (m1: A, m2: B, m3: C, m4: D, m5: E, m6: F, m7: G, m8: H, m9: I, m10: J, m11: K, m12: L, m13: M, m14: N, m15: O, m16: P, m17: Q, m18: R, m19: S, m20: T, m21: U, m22: V, m23: W, m24: X, m25: Y): TSuperClass & ReturnType<A> & ReturnType<B> & ReturnType<C> & ReturnType<D> & ReturnType<E> & ReturnType<F> & ReturnType<G> & ReturnType<H> & ReturnType<I> & ReturnType<J> & ReturnType<K> & ReturnType<L> & ReturnType<M> & ReturnType<N> & ReturnType<O> & ReturnType<P> & ReturnType<Q> & ReturnType<R> & ReturnType<S> & ReturnType<T> & ReturnType<U> & ReturnType<V> & ReturnType<W> & ReturnType<X> & ReturnType<Y>;\n  with<A extends Array<Function>> (...args: A): TSuperClass {\n    return Array.from(args).reduce((c, m) => m(c), this.superclass)\n  }\n}\n\nexport const configure = <T extends Function> (mixin: T, ...args: MixinParameters<T>): T => wrap(mixin, <T> (superclass: T) => mixin(superclass, ...args))\n\nexport const mix = <T extends Constructor> (superClass: T): MixinBuilder<T> => new MixinBuilder(superClass)\n"],"names":[],"mappings":"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"}